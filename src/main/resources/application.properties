#单数据源
spring.datasource.url=jdbc:mysql://localhost:3306/vehicle_management?characterEncoding=utf8&useSSL=true
spring.datasource.username=root
spring.datasource.password=admin
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

# DruidDataSource连接池配置
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=30
######Druid监控配置######
#1、filter配置。下面配置说明请参考Druid Github Wiki，配置_配置WebStatFilter
spring.datasource.WebStatFilter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*
#2、servlet配置。下面配置说明请参考Druid Github Wiki，配置_StatViewServlet配置
spring.datasource.StatViewServlet.loginUsername=admin
spring.datasource.StatViewServlet.loginPassword=123456


# 配置StatFilter  **打印慢sql** 大于200毫秒的标记为慢sql
spring.datasource.filter.stat.db-type=mysql
spring.datasource.filter.stat.log-slow-sql=true
spring.datasource.druid.filter.stat.slow-sql-millis=200


# mybatis配置
mybatis.type-aliases-package=com.yunze.vehiclemanagement.pojo
mybatis.mapper-locations=classpath:mapper/*.xml
# 开启驼峰命名法
mybatis.configuration.map-underscore-to-camel-case=true

# 分页插件配置，参数详细请参考https://www.cnblogs.com/viyoung/p/10534910.html配置
# 使用的数据库（可以不配置，插件自动检测）
pagehelper.helper-dialect=mysql
# 支持通过 Mapper 接口参数来传递分页参数
#pagehelper.support-methods-arguments=true
# params默认为以下配置
pagehelper.params=pageNum=pageNum;pageSize=pageSize;count=countSql;reasonable=reasonable;pageSizeZero=pageSizeZero
# 纠错机制。pageNum <= 0 会查询第一页，如果 pageNum > pages 会查询最后一页。
pagehelper.reasonable=true

# redis缓存配置
### 基础配置
# 使用的缓存类型（reids、eache）
spring.cache.type=REDIS
# Redis服务器地址
spring.redis.host=127.0.0.1
# Redis服务器连接端口（默认6379）
spring.redis.port=6379
# Redis服务器连接密码（默认6379）
spring.redis.password=
# Redis数据库索引（默认为0）
spring.redis.database=0
# 连接超时时间（毫秒）
spring.redis.timeout=6000
### 连接池配置
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-active=50
# 连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle=10
# 连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=5
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.jedis.pool.max-wait=3000


# web上传配置
# 是否支持批量上传（默认true）
spring.servlet.multipart.enabled=true
# 临时上传文件目录(tmp文件，可直接修改后缀变为原文件)
spring.servlet.multipart.location=D:/upload/image/temp/
# 上传文件最大大小（请求中单个文件最大值，默认值为1M）
spring.servlet.multipart.max-file-size=1MB
# 上传请求最大大小 （一个请求所能上传文件的最大值，默认值为10M）
spring.servlet.multipart.max-request-size=10MB
# 文件大小阈值，当大于这个阈值时将写入到磁盘，否则存在内存中，（默认值0 一般情况下不用特意修改）
#spring.servlet.multipart.file-size-threshold=0
# 判断是否要延迟解析文件（相当于懒加载，一般情况下不用特意修改）
#spring.servlet.multipart.resolve-lazily=false

## 自定义上传路径与请求路径映射
# 文件本地保存路径（绝对路径）
uploadFile.location: D:/upload/image/
uploadFile.urlMapping: /upload/image/**


# 日志配置
logging.level.web=debug
logging.level.com.yunze.vehiclemanagement.mapper=debug